//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Teshigoto.UnitTests.Generation.Resources {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class ComparableResources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal ComparableResources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Teshigoto.UnitTests.Generation.Resources.ComparableResources", typeof(ComparableResources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System;
        ///
        ///using Teshigoto.Annotation;
        ///
        ///namespace Teshigoto.CompilationTests.Comparable;
        ///
        ////// &lt;summary&gt;
        ////// Class with &lt;see cref=&quot;IgnoreAttribute&quot;/&gt; and &lt;see cref=&quot;GeneratorType.Comparable&quot;/&gt; argument
        ////// &lt;/summary&gt;
        ///[Comparable]
        ///internal partial class ClassWithExplicitIgnoreAttribute : IComparable&lt;ClassWithExplicitIgnoreAttribute&gt;
        ///{
        ///    #region Fields
        ///
        ///    /// &lt;summary&gt;
        ///    /// Field
        ///    /// &lt;/summary&gt;
        ///    private int _field;
        ///
        ///    /// &lt;summary&gt;
        ///    /// Ignored field
        ///    /// &lt;/summar [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ClassWithExplicitIgnoreAttribute {
            get {
                return ResourceManager.GetString("ClassWithExplicitIgnoreAttribute", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to // &lt;auto-generated&gt;
        /////     This code was generated by Teshigoto.Generators.
        /////     Version: 1.0.0.0
        /////
        /////     Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
        ///// &lt;/auto-generated&gt;
        ///
        ///#nullable enable
        ///
        ///namespace Teshigoto.CompilationTests.Comparable;
        ///
        ///partial class ClassWithExplicitIgnoreAttribute : global::System.IComparable&lt;global::Teshigoto.CompilationTests.Comparable.ClassWithExplicitIgnoreAttribute&gt;, global::System.IComparable
        ///{
        ///    /// &lt;summary&gt;        /// [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ClassWithExplicitIgnoreAttributeGenerated {
            get {
                return ResourceManager.GetString("ClassWithExplicitIgnoreAttributeGenerated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System;
        ///
        ///using Teshigoto.Annotation;
        ///
        ///namespace Teshigoto.CompilationTests.Comparable;
        ///
        ////// &lt;summary&gt;
        ////// Class with &lt;see cref=&quot;IgnoreAttribute&quot;/&gt;
        ////// &lt;/summary&gt;
        ///[Comparable]
        ///internal partial class ClassWithIgnoreAttribute : IComparable&lt;ClassWithIgnoreAttribute&gt;
        ///{
        ///    #region Fields
        ///
        ///    /// &lt;summary&gt;
        ///    /// Field
        ///    /// &lt;/summary&gt;
        ///    private int _field;
        ///
        ///    /// &lt;summary&gt;
        ///    /// Ignored field
        ///    /// &lt;/summary&gt;
        ///    [Ignore]
        ///    private int _ignoredField;
        ///
        ///    #endregion / [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ClassWithIgnoreAttribute {
            get {
                return ResourceManager.GetString("ClassWithIgnoreAttribute", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to // &lt;auto-generated&gt;
        /////     This code was generated by Teshigoto.Generators.
        /////     Version: 1.0.0.0
        /////
        /////     Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
        ///// &lt;/auto-generated&gt;
        ///
        ///#nullable enable
        ///
        ///namespace Teshigoto.CompilationTests.Comparable;
        ///
        ///partial class ClassWithIgnoreAttribute : global::System.IComparable&lt;global::Teshigoto.CompilationTests.Comparable.ClassWithIgnoreAttribute&gt;, global::System.IComparable
        ///{
        ///    /// &lt;summary&gt;
        ///    /// Returns [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ClassWithIgnoreAttributeGenerated {
            get {
                return ResourceManager.GetString("ClassWithIgnoreAttributeGenerated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System;
        ///
        ///using Teshigoto.Annotation;
        ///
        ///namespace Teshigoto.CompilationTests.Comparable;
        ///
        ////// &lt;summary&gt;
        ////// Class with one property
        ////// &lt;/summary&gt;
        ///[Comparable]
        ///internal partial class ClassWithOneProperty : IComparable&lt;ClassWithOneProperty&gt;, IComparable
        ///{
        ///    #region Constructor
        ///
        ///    /// &lt;summary&gt;
        ///    /// Constructor
        ///    /// &lt;/summary&gt;
        ///    /// &lt;param name=&quot;property&quot;&gt;Property&lt;/param&gt;
        ///    public ClassWithOneProperty(int property)
        ///    {
        ///        Property = property;
        ///    }
        ///
        ///    #endregi [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ClassWithOneProperty {
            get {
                return ResourceManager.GetString("ClassWithOneProperty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to // &lt;auto-generated&gt;
        /////     This code was generated by Teshigoto.Generators.
        /////     Version: 1.0.0.0
        /////
        /////     Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
        ///// &lt;/auto-generated&gt;
        ///
        ///#nullable enable
        ///
        ///namespace Teshigoto.CompilationTests.Comparable;
        ///
        ///partial class ClassWithOneProperty : global::System.IComparable&lt;global::Teshigoto.CompilationTests.Comparable.ClassWithOneProperty&gt;, global::System.IComparable
        ///{
        ///    /// &lt;summary&gt;
        ///    /// Returns a value [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ClassWithOnePropertyGenerated {
            get {
                return ResourceManager.GetString("ClassWithOnePropertyGenerated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System;
        ///
        ///using Teshigoto.Annotation;
        ///using Teshigoto.CompilationTests.DummyTypes;
        ///
        ///namespace Teshigoto.CompilationTests.Comparable;
        ///
        ////// &lt;summary&gt;
        ////// Class with three properties
        ////// &lt;/summary&gt;
        ///[Comparable]
        ///internal partial class ClassWithThreeProperties : IComparable&lt;ClassWithThreeProperties&gt;
        ///{
        ///    #region Constructor
        ///
        ///    /// &lt;summary&gt;
        ///    /// Constructor
        ///    /// &lt;/summary&gt;
        ///    /// &lt;param name=&quot;propertyOne&quot;&gt;Property 1&lt;/param&gt;
        ///    /// &lt;param name=&quot;propertyTwo&quot;&gt;Property 2&lt;/param&gt;
        ///  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ClassWithThreeProperties {
            get {
                return ResourceManager.GetString("ClassWithThreeProperties", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to // &lt;auto-generated&gt;
        /////     This code was generated by Teshigoto.Generators.
        /////     Version: 1.0.0.0
        /////
        /////     Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
        ///// &lt;/auto-generated&gt;
        ///
        ///#nullable enable
        ///
        ///namespace Teshigoto.CompilationTests.Comparable;
        ///
        ///partial class ClassWithThreeProperties : global::System.IComparable&lt;global::Teshigoto.CompilationTests.Comparable.ClassWithThreeProperties&gt;, global::System.IComparable
        ///{
        ///    /// &lt;summary&gt;
        ///    /// Returns [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ClassWithThreePropertiesGenerated {
            get {
                return ResourceManager.GetString("ClassWithThreePropertiesGenerated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System;
        ///
        ///using Teshigoto.Annotation;
        ///
        ///namespace Teshigoto.CompilationTests.Comparable;
        ///
        ////// &lt;summary&gt;
        ////// Class with two properties
        ////// &lt;/summary&gt;
        ///[Comparable]
        ///internal partial class ClassWithTwoProperties : IComparable&lt;ClassWithTwoProperties&gt;
        ///{
        ///    #region Constructor
        ///
        ///    /// &lt;summary&gt;
        ///    /// Constructor
        ///    /// &lt;/summary&gt;
        ///    /// &lt;param name=&quot;propertyOne&quot;&gt;Property 1&lt;/param&gt;
        ///    /// &lt;param name=&quot;propertyTwo&quot;&gt;Property 2&lt;/param&gt;
        ///    public ClassWithTwoProperties(int propertyOne, st [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ClassWithTwoProperties {
            get {
                return ResourceManager.GetString("ClassWithTwoProperties", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to // &lt;auto-generated&gt;
        /////     This code was generated by Teshigoto.Generators.
        /////     Version: 1.0.0.0
        /////
        /////     Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
        ///// &lt;/auto-generated&gt;
        ///
        ///#nullable enable
        ///
        ///namespace Teshigoto.CompilationTests.Comparable;
        ///
        ///partial class ClassWithTwoProperties : global::System.IComparable&lt;global::Teshigoto.CompilationTests.Comparable.ClassWithTwoProperties&gt;, global::System.IComparable
        ///{
        ///    /// &lt;summary&gt;
        ///    /// Returns a v [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ClassWithTwoPropertiesGenerated {
            get {
                return ResourceManager.GetString("ClassWithTwoPropertiesGenerated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System;
        ///
        ///using Teshigoto.Annotation;
        ///
        ///namespace Teshigoto.CompilationTests.Comparable;
        ///
        ////// &lt;summary&gt;
        ////// Record class with &lt;see cref=&quot;IgnoreAttribute&quot;/&gt; and &lt;see cref=&quot;GeneratorType.Equatable&quot;/&gt; argument
        ////// &lt;/summary&gt;
        ///[Comparable]
        ///internal partial record class RecordClassWithExplicitIgnoreAttribute : IComparable&lt;RecordClassWithExplicitIgnoreAttribute&gt;
        ///{
        ///    #region Fields
        ///
        ///    /// &lt;summary&gt;
        ///    /// Field
        ///    /// &lt;/summary&gt;
        ///    private int _field;
        ///
        ///    /// &lt;summary&gt;
        ///    /// Ignore [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string RecordClassWithExplicitIgnoreAttribute {
            get {
                return ResourceManager.GetString("RecordClassWithExplicitIgnoreAttribute", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to // &lt;auto-generated&gt;
        /////     This code was generated by Teshigoto.Generators.
        /////     Version: 1.0.0.0
        /////
        /////     Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
        ///// &lt;/auto-generated&gt;
        ///
        ///#nullable enable
        ///
        ///namespace Teshigoto.CompilationTests.Comparable;
        ///
        ///partial record RecordClassWithExplicitIgnoreAttribute : global::System.IComparable&lt;global::Teshigoto.CompilationTests.Comparable.RecordClassWithExplicitIgnoreAttribute&gt;, global::System.IComparable
        ///{
        ///    / [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string RecordClassWithExplicitIgnoreAttributeGenerated {
            get {
                return ResourceManager.GetString("RecordClassWithExplicitIgnoreAttributeGenerated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System;
        ///
        ///using Teshigoto.Annotation;
        ///
        ///namespace Teshigoto.CompilationTests.Comparable;
        ///
        ////// &lt;summary&gt;
        ////// Record class with &lt;see cref=&quot;IgnoreAttribute&quot;/&gt;
        ////// &lt;/summary&gt;
        ///[Comparable]
        ///internal partial record class RecordClassWithIgnoreAttribute : IComparable&lt;RecordClassWithIgnoreAttribute&gt;
        ///{
        ///    #region Fields
        ///
        ///    /// &lt;summary&gt;
        ///    /// Field
        ///    /// &lt;/summary&gt;
        ///    private int _field;
        ///
        ///    /// &lt;summary&gt;
        ///    /// Ignored field
        ///    /// &lt;/summary&gt;
        ///    [Ignore]
        ///    private int _ignored [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string RecordClassWithIgnoreAttribute {
            get {
                return ResourceManager.GetString("RecordClassWithIgnoreAttribute", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to // &lt;auto-generated&gt;
        /////     This code was generated by Teshigoto.Generators.
        /////     Version: 1.0.0.0
        /////
        /////     Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
        ///// &lt;/auto-generated&gt;
        ///
        ///#nullable enable
        ///
        ///namespace Teshigoto.CompilationTests.Comparable;
        ///
        ///partial record RecordClassWithIgnoreAttribute : global::System.IComparable&lt;global::Teshigoto.CompilationTests.Comparable.RecordClassWithIgnoreAttribute&gt;, global::System.IComparable
        ///{
        ///    /// &lt;summary&gt;
        ///   [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string RecordClassWithIgnoreAttributeGenerated {
            get {
                return ResourceManager.GetString("RecordClassWithIgnoreAttributeGenerated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System;
        ///
        ///using Teshigoto.Annotation;
        ///
        ///namespace Teshigoto.CompilationTests.Comparable;
        ///
        ////// &lt;summary&gt;
        ////// Record class with one property
        ////// &lt;/summary&gt;
        ///[Comparable]
        ///internal partial record class RecordClassWithOneProperty : IComparable&lt;RecordClassWithOneProperty&gt;
        ///{
        ///    #region Constructor
        ///
        ///    /// &lt;summary&gt;
        ///    /// Constructor
        ///    /// &lt;/summary&gt;
        ///    /// &lt;param name=&quot;property&quot;&gt;Property&lt;/param&gt;
        ///    public RecordClassWithOneProperty(int property)
        ///    {
        ///        Property = property;
        ///   [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string RecordClassWithOneProperty {
            get {
                return ResourceManager.GetString("RecordClassWithOneProperty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to // &lt;auto-generated&gt;
        /////     This code was generated by Teshigoto.Generators.
        /////     Version: 1.0.0.0
        /////
        /////     Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
        ///// &lt;/auto-generated&gt;
        ///
        ///#nullable enable
        ///
        ///namespace Teshigoto.CompilationTests.Comparable;
        ///
        ///partial record RecordClassWithOneProperty : global::System.IComparable&lt;global::Teshigoto.CompilationTests.Comparable.RecordClassWithOneProperty&gt;, global::System.IComparable
        ///{
        ///    /// &lt;summary&gt;
        ///    /// Re [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string RecordClassWithOnePropertyGenerated {
            get {
                return ResourceManager.GetString("RecordClassWithOnePropertyGenerated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System;
        ///
        ///using Teshigoto.Annotation;
        ///using Teshigoto.CompilationTests.DummyTypes;
        ///
        ///namespace Teshigoto.CompilationTests.Comparable;
        ///
        ////// &lt;summary&gt;
        ////// Record class with three properties
        ////// &lt;/summary&gt;
        ///[Comparable]
        ///internal partial record class RecordClassWithThreeProperties : IComparable&lt;RecordClassWithThreeProperties&gt;
        ///{
        ///    #region Constructor
        ///
        ///    /// &lt;summary&gt;
        ///    /// Constructor
        ///    /// &lt;/summary&gt;
        ///    /// &lt;param name=&quot;propertyOne&quot;&gt;Property 1&lt;/param&gt;
        ///    /// &lt;param name=&quot;property [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string RecordClassWithThreeProperties {
            get {
                return ResourceManager.GetString("RecordClassWithThreeProperties", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to // &lt;auto-generated&gt;
        /////     This code was generated by Teshigoto.Generators.
        /////     Version: 1.0.0.0
        /////
        /////     Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
        ///// &lt;/auto-generated&gt;
        ///
        ///#nullable enable
        ///
        ///namespace Teshigoto.CompilationTests.Comparable;
        ///
        ///partial record RecordClassWithThreeProperties : global::System.IComparable&lt;global::Teshigoto.CompilationTests.Comparable.RecordClassWithThreeProperties&gt;, global::System.IComparable
        ///{
        ///    /// &lt;summary&gt;
        ///   [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string RecordClassWithThreePropertiesGenerated {
            get {
                return ResourceManager.GetString("RecordClassWithThreePropertiesGenerated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System;
        ///
        ///using Teshigoto.Annotation;
        ///
        ///namespace Teshigoto.CompilationTests.Comparable;
        ///
        ////// &lt;summary&gt;
        ////// Record class with two properties
        ////// &lt;/summary&gt;
        ///[Comparable]
        ///internal partial record class RecordClassWithTwoProperties : IComparable&lt;RecordClassWithTwoProperties&gt;
        ///{
        ///    #region Constructor
        ///
        ///    /// &lt;summary&gt;
        ///    /// Constructor
        ///    /// &lt;/summary&gt;
        ///    /// &lt;param name=&quot;propertyOne&quot;&gt;Property 1&lt;/param&gt;
        ///    /// &lt;param name=&quot;propertyTwo&quot;&gt;Property 2&lt;/param&gt;
        ///    public RecordClassWithT [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string RecordClassWithTwoProperties {
            get {
                return ResourceManager.GetString("RecordClassWithTwoProperties", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to // &lt;auto-generated&gt;
        /////     This code was generated by Teshigoto.Generators.
        /////     Version: 1.0.0.0
        /////
        /////     Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
        ///// &lt;/auto-generated&gt;
        ///
        ///#nullable enable
        ///
        ///namespace Teshigoto.CompilationTests.Comparable;
        ///
        ///partial record RecordClassWithTwoProperties : global::System.IComparable&lt;global::Teshigoto.CompilationTests.Comparable.RecordClassWithTwoProperties&gt;, global::System.IComparable
        ///{
        ///    /// &lt;summary&gt;
        ///    // [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string RecordClassWithTwoPropertiesGenerated {
            get {
                return ResourceManager.GetString("RecordClassWithTwoPropertiesGenerated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System;
        ///
        ///using Teshigoto.Annotation;
        ///
        ///namespace Teshigoto.CompilationTests.Comparable;
        ///
        ////// &lt;summary&gt;
        ////// Record struct with &lt;see cref=&quot;IgnoreAttribute&quot;/&gt; and &lt;see cref=&quot;GeneratorType.Comparable&quot;/&gt; argument
        ////// &lt;/summary&gt;
        ///[Comparable]
        ///internal partial record struct RecordStructWithExplicitIgnoreAttribute : IComparable&lt;RecordStructWithExplicitIgnoreAttribute&gt;
        ///{
        ///    #region Fields
        ///
        ///    /// &lt;summary&gt;
        ///    /// Field
        ///    /// &lt;/summary&gt;
        ///    private int _field;
        ///
        ///    /// &lt;summary&gt;
        ///    /// I [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string RecordStructWithExplicitIgnoreAttribute {
            get {
                return ResourceManager.GetString("RecordStructWithExplicitIgnoreAttribute", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to // &lt;auto-generated&gt;
        /////     This code was generated by Teshigoto.Generators.
        /////     Version: 1.0.0.0
        /////
        /////     Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
        ///// &lt;/auto-generated&gt;
        ///
        ///#nullable enable
        ///
        ///namespace Teshigoto.CompilationTests.Comparable;
        ///
        ///partial record struct RecordStructWithExplicitIgnoreAttribute : global::System.IComparable&lt;global::Teshigoto.CompilationTests.Comparable.RecordStructWithExplicitIgnoreAttribute&gt;, global::System.IComparable        /// [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string RecordStructWithExplicitIgnoreAttributeGenerated {
            get {
                return ResourceManager.GetString("RecordStructWithExplicitIgnoreAttributeGenerated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System;
        ///
        ///using Teshigoto.Annotation;
        ///
        ///namespace Teshigoto.CompilationTests.Comparable;
        ///
        ////// &lt;summary&gt;
        ////// Record struct with &lt;see cref=&quot;IgnoreAttribute&quot;/&gt;
        ////// &lt;/summary&gt;
        ///[Comparable]
        ///internal partial record struct RecordStructWithIgnoreAttribute : IComparable&lt;RecordStructWithIgnoreAttribute&gt;
        ///{
        ///    #region Fields
        ///
        ///    /// &lt;summary&gt;
        ///    /// Field
        ///    /// &lt;/summary&gt;
        ///    private int _field;
        ///
        ///    /// &lt;summary&gt;
        ///    /// Ignored field
        ///    /// &lt;/summary&gt;
        ///    [Ignore]
        ///    private int _ign [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string RecordStructWithIgnoreAttribute {
            get {
                return ResourceManager.GetString("RecordStructWithIgnoreAttribute", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to // &lt;auto-generated&gt;
        /////     This code was generated by Teshigoto.Generators.
        /////     Version: 1.0.0.0
        /////
        /////     Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
        ///// &lt;/auto-generated&gt;
        ///
        ///#nullable enable
        ///
        ///namespace Teshigoto.CompilationTests.Comparable;
        ///
        ///partial record struct RecordStructWithIgnoreAttribute : global::System.IComparable&lt;global::Teshigoto.CompilationTests.Comparable.RecordStructWithIgnoreAttribute&gt;, global::System.IComparable
        ///{
        ///    /// &lt;sum [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string RecordStructWithIgnoreAttributeGenerated {
            get {
                return ResourceManager.GetString("RecordStructWithIgnoreAttributeGenerated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System;
        ///
        ///using Teshigoto.Annotation;
        ///
        ///namespace Teshigoto.CompilationTests.Comparable;
        ///
        ////// &lt;summary&gt;
        ////// Record struct with one property
        ////// &lt;/summary&gt;
        ///[Comparable]
        ///internal partial record struct RecordStructWithOneProperty : IComparable&lt;RecordStructWithOneProperty&gt;
        ///{
        ///    #region Constructor
        ///
        ///    /// &lt;summary&gt;
        ///    /// Constructor
        ///    /// &lt;/summary&gt;
        ///    /// &lt;param name=&quot;property&quot;&gt;Property&lt;/param&gt;
        ///    public RecordStructWithOneProperty(int property)
        ///    {
        ///        Property = property [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string RecordStructWithOneProperty {
            get {
                return ResourceManager.GetString("RecordStructWithOneProperty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to // &lt;auto-generated&gt;
        /////     This code was generated by Teshigoto.Generators.
        /////     Version: 1.0.0.0
        /////
        /////     Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
        ///// &lt;/auto-generated&gt;
        ///
        ///#nullable enable
        ///
        ///namespace Teshigoto.CompilationTests.Comparable;
        ///
        ///partial record struct RecordStructWithOneProperty : global::System.IComparable&lt;global::Teshigoto.CompilationTests.Comparable.RecordStructWithOneProperty&gt;, global::System.IComparable
        ///{
        ///    /// &lt;summary&gt;
        ///  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string RecordStructWithOnePropertyGenerated {
            get {
                return ResourceManager.GetString("RecordStructWithOnePropertyGenerated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System;
        ///
        ///using Teshigoto.Annotation;
        ///using Teshigoto.CompilationTests.DummyTypes;
        ///
        ///namespace Teshigoto.CompilationTests.Comparable;
        ///
        ////// &lt;summary&gt;
        ////// Record struct with three properties
        ////// &lt;/summary&gt;
        ///[Comparable]
        ///internal partial record struct RecordStructWithThreeProperties : IComparable&lt;RecordStructWithThreeProperties&gt;
        ///{
        ///    #region Constructor
        ///
        ///    /// &lt;summary&gt;
        ///    /// Constructor
        ///    /// &lt;/summary&gt;
        ///    /// &lt;param name=&quot;propertyOne&quot;&gt;Property 1&lt;/param&gt;
        ///    /// &lt;param name=&quot;prop [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string RecordStructWithThreeProperties {
            get {
                return ResourceManager.GetString("RecordStructWithThreeProperties", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to // &lt;auto-generated&gt;
        /////     This code was generated by Teshigoto.Generators.
        /////     Version: 1.0.0.0
        /////
        /////     Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
        ///// &lt;/auto-generated&gt;
        ///
        ///#nullable enable
        ///
        ///namespace Teshigoto.CompilationTests.Comparable;
        ///
        ///partial record struct RecordStructWithThreeProperties : global::System.IComparable&lt;global::Teshigoto.CompilationTests.Comparable.RecordStructWithThreeProperties&gt;, global::System.IComparable
        ///{
        ///    /// &lt;sum [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string RecordStructWithThreePropertiesGenerated {
            get {
                return ResourceManager.GetString("RecordStructWithThreePropertiesGenerated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System;
        ///
        ///using Teshigoto.Annotation;
        ///
        ///namespace Teshigoto.CompilationTests.Comparable;
        ///
        ////// &lt;summary&gt;
        ////// Record struct with two properties
        ////// &lt;/summary&gt;
        ///[Comparable]
        ///internal partial record struct RecordStructWithTwoProperties : IComparable&lt;RecordStructWithTwoProperties&gt;
        ///{
        ///    #region Constructor
        ///
        ///    /// &lt;summary&gt;
        ///    /// Constructor
        ///    /// &lt;/summary&gt;
        ///    /// &lt;param name=&quot;propertyOne&quot;&gt;Property 1&lt;/param&gt;
        ///    /// &lt;param name=&quot;propertyTwo&quot;&gt;Property 2&lt;/param&gt;
        ///    public RecordStruct [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string RecordStructWithTwoProperties {
            get {
                return ResourceManager.GetString("RecordStructWithTwoProperties", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to // &lt;auto-generated&gt;
        /////     This code was generated by Teshigoto.Generators.
        /////     Version: 1.0.0.0
        /////
        /////     Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
        ///// &lt;/auto-generated&gt;
        ///
        ///#nullable enable
        ///
        ///namespace Teshigoto.CompilationTests.Comparable;
        ///
        ///partial record struct RecordStructWithTwoProperties : global::System.IComparable&lt;global::Teshigoto.CompilationTests.Comparable.RecordStructWithTwoProperties&gt;, global::System.IComparable
        ///{
        ///    /// &lt;summary [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string RecordStructWithTwoPropertiesGenerated {
            get {
                return ResourceManager.GetString("RecordStructWithTwoPropertiesGenerated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System;
        ///
        ///using Teshigoto.Annotation;
        ///
        ///namespace Teshigoto.CompilationTests.Comparable;
        ///
        ////// &lt;summary&gt;
        ////// Struct with &lt;see cref=&quot;IgnoreAttribute&quot;/&gt; and &lt;see cref=&quot;GeneratorType.Comparable&quot;/&gt; argument
        ////// &lt;/summary&gt;
        ///[Comparable]
        ///internal partial struct StructWithExplicitIgnoreAttribute : IComparable&lt;StructWithExplicitIgnoreAttribute&gt;
        ///{
        ///    #region Fields
        ///
        ///    /// &lt;summary&gt;
        ///    /// Field
        ///    /// &lt;/summary&gt;
        ///    private int _field;
        ///
        ///    /// &lt;summary&gt;
        ///    /// Ignored field
        ///    /// &lt;/su [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string StructWithExplicitIgnoreAttribute {
            get {
                return ResourceManager.GetString("StructWithExplicitIgnoreAttribute", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to // &lt;auto-generated&gt;
        /////     This code was generated by Teshigoto.Generators.
        /////     Version: 1.0.0.0
        /////
        /////     Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
        ///// &lt;/auto-generated&gt;
        ///
        ///#nullable enable
        ///
        ///namespace Teshigoto.CompilationTests.Comparable;
        ///
        ///partial struct StructWithExplicitIgnoreAttribute : global::System.IComparable&lt;global::Teshigoto.CompilationTests.Comparable.StructWithExplicitIgnoreAttribute&gt;, global::System.IComparable
        ///{
        ///    /// &lt;summar [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string StructWithExplicitIgnoreAttributeGenerated {
            get {
                return ResourceManager.GetString("StructWithExplicitIgnoreAttributeGenerated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System;
        ///
        ///using Teshigoto.Annotation;
        ///
        ///namespace Teshigoto.CompilationTests.Comparable;
        ///
        ////// &lt;summary&gt;
        ////// Struct with &lt;see cref=&quot;IgnoreAttribute&quot;/&gt;
        ////// &lt;/summary&gt;
        ///[Comparable]
        ///internal partial struct StructWithIgnoreAttribute : IComparable&lt;StructWithIgnoreAttribute&gt;
        ///{
        ///    #region Fields
        ///
        ///    /// &lt;summary&gt;
        ///    /// Field
        ///    /// &lt;/summary&gt;
        ///    private int _field;
        ///
        ///    /// &lt;summary&gt;
        ///    /// Ignored field
        ///    /// &lt;/summary&gt;
        ///    [Ignore]
        ///    private int _ignoredField;
        ///
        ///    #endregi [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string StructWithIgnoreAttribute {
            get {
                return ResourceManager.GetString("StructWithIgnoreAttribute", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to // &lt;auto-generated&gt;
        /////     This code was generated by Teshigoto.Generators.
        /////     Version: 1.0.0.0
        /////
        /////     Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
        ///// &lt;/auto-generated&gt;
        ///
        ///#nullable enable
        ///
        ///namespace Teshigoto.CompilationTests.Comparable;
        ///
        ///partial struct StructWithIgnoreAttribute : global::System.IComparable&lt;global::Teshigoto.CompilationTests.Comparable.StructWithIgnoreAttribute&gt;, global::System.IComparable
        ///{
        ///    /// &lt;summary&gt;
        ///    /// Retu [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string StructWithIgnoreAttributeGenerated {
            get {
                return ResourceManager.GetString("StructWithIgnoreAttributeGenerated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System;
        ///
        ///using Teshigoto.Annotation;
        ///
        ///namespace Teshigoto.CompilationTests.Comparable;
        ///
        ////// &lt;summary&gt;
        ////// Struct with one property
        ////// &lt;/summary&gt;
        ///[Comparable]
        ///internal partial struct StructWithOneProperty : IComparable&lt;StructWithOneProperty&gt;
        ///{
        ///    #region Constructor
        ///
        ///    /// &lt;summary&gt;
        ///    /// Constructor
        ///    /// &lt;/summary&gt;
        ///    /// &lt;param name=&quot;property&quot;&gt;Property&lt;/param&gt;
        ///    public StructWithOneProperty(int property)
        ///    {
        ///        Property = property;
        ///    }
        ///
        ///    #endregion // Co [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string StructWithOneProperty {
            get {
                return ResourceManager.GetString("StructWithOneProperty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to // &lt;auto-generated&gt;
        /////     This code was generated by Teshigoto.Generators.
        /////     Version: 1.0.0.0
        /////
        /////     Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
        ///// &lt;/auto-generated&gt;
        ///
        ///#nullable enable
        ///
        ///namespace Teshigoto.CompilationTests.Comparable;
        ///
        ///partial struct StructWithOneProperty : global::System.IComparable&lt;global::Teshigoto.CompilationTests.Comparable.StructWithOneProperty&gt;, global::System.IComparable
        ///{
        ///    /// &lt;summary&gt;
        ///    /// Returns a va [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string StructWithOnePropertyGenerated {
            get {
                return ResourceManager.GetString("StructWithOnePropertyGenerated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System;
        ///
        ///using Teshigoto.Annotation;
        ///using Teshigoto.CompilationTests.DummyTypes;
        ///
        ///namespace Teshigoto.CompilationTests.Comparable;
        ///
        ////// &lt;summary&gt;
        ////// Struct with three properties
        ////// &lt;/summary&gt;
        ///[Comparable]
        ///internal partial struct StructWithThreeProperties : IComparable&lt;StructWithThreeProperties&gt;
        ///{
        ///    #region Constructor
        ///
        ///    /// &lt;summary&gt;
        ///    /// Constructor
        ///    /// &lt;/summary&gt;
        ///    /// &lt;param name=&quot;propertyOne&quot;&gt;Property 1&lt;/param&gt;
        ///    /// &lt;param name=&quot;propertyTwo&quot;&gt;Property 2&lt;/param [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string StructWithThreeProperties {
            get {
                return ResourceManager.GetString("StructWithThreeProperties", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to // &lt;auto-generated&gt;
        /////     This code was generated by Teshigoto.Generators.
        /////     Version: 1.0.0.0
        /////
        /////     Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
        ///// &lt;/auto-generated&gt;
        ///
        ///#nullable enable
        ///
        ///namespace Teshigoto.CompilationTests.Comparable;
        ///
        ///partial struct StructWithThreeProperties : global::System.IComparable&lt;global::Teshigoto.CompilationTests.Comparable.StructWithThreeProperties&gt;, global::System.IComparable
        ///{
        ///    /// &lt;summary&gt;
        ///    /// Retu [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string StructWithThreePropertiesGenerated {
            get {
                return ResourceManager.GetString("StructWithThreePropertiesGenerated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System;
        ///
        ///using Teshigoto.Annotation;
        ///
        ///namespace Teshigoto.CompilationTests.Comparable;
        ///
        ////// &lt;summary&gt;
        ////// Struct with two properties
        ////// &lt;/summary&gt;
        ///[Comparable]
        ///internal partial struct StructWithTwoProperties : IComparable&lt;StructWithTwoProperties&gt;
        ///{
        ///    #region Constructor
        ///
        ///    /// &lt;summary&gt;
        ///    /// Constructor
        ///    /// &lt;/summary&gt;
        ///    /// &lt;param name=&quot;propertyOne&quot;&gt;Property 1&lt;/param&gt;
        ///    /// &lt;param name=&quot;propertyTwo&quot;&gt;Property 2&lt;/param&gt;
        ///    public StructWithTwoProperties(int propertyOn [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string StructWithTwoProperties {
            get {
                return ResourceManager.GetString("StructWithTwoProperties", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to // &lt;auto-generated&gt;
        /////     This code was generated by Teshigoto.Generators.
        /////     Version: 1.0.0.0
        /////
        /////     Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
        ///// &lt;/auto-generated&gt;
        ///
        ///#nullable enable
        ///
        ///namespace Teshigoto.CompilationTests.Comparable;
        ///
        ///partial struct StructWithTwoProperties : global::System.IComparable&lt;global::Teshigoto.CompilationTests.Comparable.StructWithTwoProperties&gt;, global::System.IComparable
        ///{
        ///    /// &lt;summary&gt;
        ///    /// Returns  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string StructWithTwoPropertiesGenerated {
            get {
                return ResourceManager.GetString("StructWithTwoPropertiesGenerated", resourceCulture);
            }
        }
    }
}
